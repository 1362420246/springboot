<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.qbk.dao.one.UserDao">


	<select id="getUser"  parameterType="UserBean" resultType="com.qbk.bean.UserBean">
		SELECT a.userId ,a.loginName ,a.userName , a.`password` ,a.`status` , a.workStatus ,
		a.mobilePhone ,a.email , a.affiliation , a.createTime , a.updatetime ,a.lastLoginTime , a.version
		FROM t_user a
		<where>
			<if test="userId != null ">
				AND a.userId = #{userId}
			</if>
			AND 1=1
		</where>
	</select>

	<update id="updateUser" parameterType="UserBean" >
		UPDATE t_user a
		SET  a.loginName = #{loginName}
		WHERE a.userId = #{userId}
	</update>

	<update id="delete" parameterType="int" >
		UPDATE t_user a
		SET  a.`status` = -1
		WHERE a.userId = #{userId}
	</update>
	<insert id="addUser" parameterType="UserBean" useGeneratedKeys="true" keyProperty="userId">
		INSERT INTO t_user
		(loginName,userName,`password`,mobilePhone,email,affiliation)
		VALUES
		(#{loginName},#{userName},#{password},#{mobilePhone},#{email},#{affiliation})
	</insert>


	<resultMap type="com.qbk.bean.UserBean" id="UserBeanMap">
		<id column="userId" property="userId"/>
		<result column="loginName" property="loginName"/>
		<result column="userName" property="userName"/>
		<result column="password" property="password"/>
		<result column="status" property="status"/>
		<result column="workStatus" property="workStatus"/>
		<result column="mobilePhone" property="mobilePhone"/>
		<result column="email" property="email"/>
		<result column="affiliation" property="affiliation"/>
		<result column="createTime" property="createTime"/>
		<result column="updatetime" property="updatetime"/>
		<result column="lastLoginTime" property="lastLoginTime"/>
		<result column="version" property="version"/>
		<collection property="roleList" ofType="com.qbk.bean.RoleBean">
			<id column="roleId" property="roleId"/>
			<result column="roleName" property="roleName"/>
			<result column="description" property="description"/>
			<result column="role_createTime" property="createTime"/>
			<result column="role_updateTime" property="updateTime"/>
			<result column="role_status" property="status"/>
			<result column="role_version" property="version"/>
		</collection>

	</resultMap>

	<!-- 查询用户列表  -->
	<select id="getUserList" parameterType="Map" resultMap="UserBeanMap">
		SELECT a.userId ,a.loginName ,a.userName , a.`password` ,a.`status` , a.workStatus ,
				a.mobilePhone ,a.email , a.affiliation , a.createTime , a.updatetime ,
				a.lastLoginTime , a.version ,c.roleId ,c.roleName ,c.description ,
				c.createTime as role_createTime , c.updateTime as role_updateTime ,
				c.`status` as role_status , c.version as role_version
		FROM t_user a LEFT JOIN t_user_role_rel b
		ON a.userId = b.userId
		LEFT JOIN t_role c
		ON b.roleId = c.roleId
		<where>
			<if test="userId != null ">
				and a.userId = #{userId}
			</if>
			<if test="loginName != null and loginName != '' ">
				and a.loginName like CONCAT('%',#{loginName},'%')
			</if>
			<if test="roleIdArry != null ">
				and c.roleId in
				<foreach collection="roleIdArry" separator="," item="roleId" open="(" close=")">
					#{roleId}
				</foreach>
			</if>
			and a.`status` > -1
		</where>
		ORDER BY a.updatetime DESC
	</select>

 
</mapper>
